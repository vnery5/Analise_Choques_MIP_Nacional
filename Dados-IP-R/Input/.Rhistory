footnote(value = as_paragraph("Fonte: elaboração própria com dados da MIP do IBGE (2015)."),
ref_symbols = "")
# Gráfico
# Leitura dos pacotes
library(ggplot2)
library(scales)
# Seleção apenas dos n setores (exclui a linha com o total)
Decomp_set = Decomp[-13,]
# Variação de x
g1 = ggplot(Decomp_set) +
geom_col(aes(x = factor(Setores, levels = unique(Setores)), y = `Var. x`),
fill = "blue4") +
theme_bw() +
xlab("Setores") +
ylab(" ") +
ggtitle("Decomposição Estrutural") +
labs(subtitle = "2015-2010\nVariação do Produto") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(angle=35, vjust = 0.7)) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(-50000, 250000),
breaks = seq(from = -50000, to = 250000, by = 50000))
# Variação Tecnológica
g2 = ggplot(Decomp_set) +
geom_col(aes(x = factor(Setores, levels = unique(Setores)), y = `Var. Tecnológica`),
fill = "firebrick") +
theme_bw() +
xlab("Setores") +
ylab(" ") +
ggtitle("Variação Tecnológica") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01))
# Variação na Demanda Final
g3 =  ggplot(Decomp_set) +
geom_col(aes(x = factor(Setores, levels = unique(Setores)), y = `Var. Demanda Final`),
fill = "deepskyblue3") +
theme_bw() +
xlab("Setores") +
ylab(" ") +
ggtitle("Variação na Demanda Final") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01))
# Grid com os três gráficos
library(gridExtra)
grid.arrange(g1, arrangeGrob(g2, g3, ncol = 2), ncol = 1,
bottom = "Fonte: elaboração própria com dados da MIP do IBGE (2015/2010).")
} # Decomposição Estrutural
# Multiplicadores Simples de Produção
ggplot(MultProd, aes(x = factor(Setores, levels = unique(Setores)), y = MP)) +
geom_col() +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab("Setores") +
ylab(" ") +
ggtitle("Multiplicadores Simples de Produção") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
geom_text(aes(label = round(MP, digits = 2)), vjust = -0.5, size = 3) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(0, 2.5),
breaks = seq(from = 0.0, to = 2.5, by = 0.5))
# Multiplicadores Totais de Produção
ggplot(MultProd, aes(x = factor(Setores, levels = unique(Setores)), y = MPT)) +
geom_col() +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab("Setores") +
ylab(" ") +
ggtitle("Multiplicadores Totais de Produção") +
labs(subtitle = "2015") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
geom_text(aes(label = round(MPT, digits = 2)), vjust = -0.5, size = 3) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(0, 5.5),
breaks = seq(from = 0.0, to = 5.5, by = 0.5))
# Multiplicadores Totais de Produção Truncados
ggplot(MultProd, aes(x = factor(Setores, levels = unique(Setores)), y = MPTT)) +
geom_col() +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab("Setores") +
ylab(" ") +
ggtitle("Multiplicadores Totais de Produção Truncados") +
labs(subtitle = "2015") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
geom_text(aes(label = round(MPTT, digits = 2)), vjust = -0.5, size = 3) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(0, 4.5),
breaks = seq(from = 0.0, to = 4.5, by = 0.5))
# Multiplicadores Simples de Emprego
ggplot(MultEmp, aes(x = factor(Setores, levels = unique(Setores)), y = ME)) +
geom_col() +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab("Setores") +
ylab(" ") +
ggtitle("Multiplicadores Simples de Emprego") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).\nNota: Por 1.000.000 R$.") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
geom_text(aes(label = round(ME, digits = 2)), vjust = -0.5, size = 3) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(0,35),
breaks = seq(from = 0.0, to = 35.0, by = 5))
# Multiplicadores de Emprego (Tipo I)
ggplot(MultEmp, aes(x = factor(Setores, levels = unique(Setores)), y = MEI)) +
geom_col() +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab("Setores") +
ylab(" ") +
ggtitle("Multiplicadores de Emprego (Tipo I)") +
labs(subtitle = "2015") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
geom_text(aes(label = round(MEI, digits = 2)), vjust = -0.5, size = 3) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(0,8),
breaks = seq(from = 0.0, to = 8, by = 1))
# Multiplicadores Totais de Emprego (truncados)
ggplot(MultEmp, aes(x = factor(Setores, levels = unique(Setores)), y = MET)) +
geom_col() +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab("Setores") +
ylab(" ") +
ggtitle("Multiplicadores Totais de Emprego (truncados)") +
labs(subtitle = "2015") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).\nNota: Por 1.000.000 R$.") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
geom_text(aes(label = round(MET, digits = 2)), vjust = -0.5, size = 3) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(0,45),
breaks = seq(from = 0, to = 45, by = 5))
# Multiplicadores de Emprego (Tipo II)
ggplot(MultEmp, aes(x = factor(Setores, levels = unique(Setores)), y = MEII)) +
geom_col() +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab("Setores") +
ylab(" ") +
ggtitle("Multiplicadores de Emprego (Tipo II)") +
labs(subtitle = "2015") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
geom_text(aes(label = round(MEII, digits = 2)), vjust = -0.5, size = 3) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(0,20),
breaks = seq(from = 0, to = 20, by = 5))
# Multiplicadores Simples de Renda
ggplot(MultRen, aes(x = factor(Setores, levels = unique(Setores)), y = MR)) +
geom_col() +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab("Setores") +
ylab(" ") +
ggtitle("Multiplicadores Simples de Renda") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
geom_text(aes(label = round(MR, digits = 2)), vjust = -0.5, size = 3) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(0,1),
breaks = seq(from = 0, to = 1, by = 0.25))
# Multiplicadores de Renda (Tipo I)
ggplot(MultRen, aes(x = factor(Setores, levels = unique(Setores)), y = MRI)) +
geom_col() +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab("Setores") +
ylab(" ") +
ggtitle("Multiplicadores de Renda (Tipo I)") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
geom_text(aes(label = round(MRI, digits = 2)), vjust = -0.5, size = 3) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(0,3.5),
breaks = seq(from = 0, to = 3.5, by = 0.5))
# Multiplicadores Totais de Renda (truncados)
ggplot(MultRen, aes(x = factor(Setores, levels = unique(Setores)), y = MRT)) +
geom_col() +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab("Setores") +
ylab(" ") +
ggtitle("Multiplicadores Totais de Renda (truncados)") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
geom_text(aes(label = round(MRT, digits = 2)), vjust = -0.5, size = 3) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(0,1.5),
breaks = seq(from = 0, to = 1.5, by = 0.25))
# Multiplicadores de Renda (Tipo II)
ggplot(MultRen, aes(x = factor(Setores, levels = unique(Setores)), y = MRII)) +
geom_col() +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab("Setores") +
ylab(" ") +
ggtitle("Multiplicadores de Renda (Tipo II)") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
geom_text(aes(label = round(MRII, digits = 2)), vjust = -0.5, size = 3) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(0,6),
breaks = seq(from = 0, to = 6, by = 0.5))
# Gráfico
ggplot(IndLig, aes(x = FLG, y = BL)) +
geom_point() +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab(expression("Índice de ligação para frente"~"("*U[i]*")")) +
ylab(expression("Índice de ligação para trás"~"("*U[j]*")")) +
ggtitle("Índices de Ligação e Setores-Chave") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).\nNota: Índices de ligação para frente calculados com a matriz inversa de Ghosh.") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
geom_text_repel(aes(label = Setores), vjust = 0.8, size = 2.5)+
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(0.5,1.5),
breaks = seq(from = 0.5, to = 2, by = 0.25)) +
scale_x_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(0.5,1.5),
breaks = seq(from = 0.5, to = 1.5, by = 0.25)) +
geom_hline(yintercept=1, linetype="dashed", color = "black") +
geom_vline(xintercept=1, linetype="dashed", color = "black") +
annotate("text", x=1.42, y=1.5,
label= "Setor-Chave", colour='black', size=3) +
annotate('text', x=0.65, y=1.5,
label='Forte encadeamento para trás', colour='black', size=3) +
annotate('text', x=0.60, y=0.5,
label='Fraco encadeamento', colour='black', size=3) +
annotate('text', x=1.35, y=0.5,
label='Forte encadeamento para frente', colour='black', size=3)
{
# Extração Hipotética
BLextrac = matrix(NA, ncol=1, nrow=n) # Matriz Extração (será preenchida no loop)
FLextrac = matrix(NA, ncol=1, nrow=n) # Matriz Extração (será preenchida no loop)
# Loop Extração
for (i in 1:n) {
for (j in 1:n) {
ABL = A
ABL[, j] = 0
BBL = solve(I - ABL)
xbl = BBL %*% y
tbl = sum(x) - sum(xbl)
BLextrac[j] = tbl
BLextracp = BLextrac / sum(x) * 100
FFL = F
FFL[i, ] = 0
GFL = solve(I - FFL)
xfl = t(sp) %*% GFL
tfl = sum(x) - sum(xfl)
FLextrac[i] = tfl
FLextracp = FLextrac / sum(x) * 100
Extrac = cbind(BLextrac, FLextrac, BLextracp, FLextracp)
colnames(Extrac) = c("BL", "FL", "BL%", "FL%")
}
}
# Tabela de dados (data frame) com os resultados
Extrac = cbind(Setores, Extrac)
colnames(Extrac) = c("Setores", "BL", "FL", "BL%", "FL%")
Extrac # Visualização do objeto (data.frame com os resultados)
# Opção com flextable
library(flextable)
flextable(Extrac) %>%
align(align = "center", part = "all" ) %>%
set_caption(caption = "Extração Hipotética") %>%
footnote(value = as_paragraph("Fonte: elaboração própria com dados da MIP do IBGE (2015)."),
ref_symbols = "")
} # Extração Hipotética
{
# Campo de Influência
ee = 0.001 # Incremento
E = matrix(0, ncol = n, nrow = n) # Matriz de variações incrementais (será preenchida no loop)
SI = matrix(0, ncol = n, nrow = n) # Matriz de campo de influência (será preenchida no loop)
# Loop Campo de Influência
for (i in 1:n) {
for (j in 1:n) {
E[i, j] = ee
AE = A + E
BE = solve(I - AE)
FE = (BE - B) / ee
FEq = FE * FE
S = sum(FEq)
SI[i, j] = S
E[i, j] = 0
}
}
# Gráficos
sx = Setores[1:n, ]
sy = Setores[1:n, ]
data = expand.grid(X = sx, Y = sy)
ggplot(data,aes(X, Y, fill = SI)) +
geom_tile() +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab("Setores") +
ylab("Setores") +
ggtitle("Campo de Influência") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
theme(axis.text.x = element_text(angle=35, vjust = 0.7),
axis.text.y = element_text(angle=35, hjust = 0.7)) +
theme(legend.position = "none") +
scale_fill_distiller(palette = "Greys", trans = "reverse")
# Tipologia com base na média
SI2 = as_tibble(SI) %>%
mutate_all(funs(case_when(. < mean(SI) ~ 1,
. >= mean(SI) & . < (mean(SI) + sd(SI)) ~ 2,
. >= (mean(SI) + sd(SI)) & . < (mean(SI) + 2 * sd(SI)) ~ 3,
. >= (mean(SI) + 2 * sd(SI)) ~ 4)))
SI2 = as.factor(as.matrix(SI2))
# Gráfico
ggplot(data,aes(X, Y)) +
geom_tile(aes(fill= SI2)) +
theme_bw() +
theme(plot.background = element_rect(fill = "#e6f2ff", colour = "#e6f2ff")) +
xlab("Setores") +
ylab("Setores") +
ggtitle("Campo de Influência") +
labs(subtitle = "2015",
caption = "Fonte: elaboração própria com dados da MIP do IBGE (2015).") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0)) +
theme(axis.text.x = element_text(angle=35, vjust = 0.7),
axis.text.y = element_text(angle=35, hjust = 0.7)) +
scale_fill_manual(name = "SI",
values=c("#e9e9e9", "#a9a9a9", "#3f3f3f", "#191919"),
labels = c ("< Média", "< Média + DP", "< Média + 2DP", "> Média + 2DP"))
} # Campo de Influência
View(SI)
View(IPL)
View(IPLN)
View(SI)
Z15 = data.matrix(read.xlsx("MIP2015_12s.xlsx", sheet = "Z", colNames = FALSE))
# Demanda Final:
y15 = data.matrix(read.xlsx("MIP2015_12s.xlsx", sheet = "y", colNames = FALSE))
# Valor Bruto da Produção:
x15 = data.matrix(read.xlsx("MIP2015_12s.xlsx", sheet = "x", colNames = FALSE))
x15 = as.vector(x15)
## Ano: 2010
# Consumo Intermediário:
Z10 = data.matrix(read.xlsx("MIP2010_12s.xlsx", sheet = "Z", colNames = FALSE))
# Demanda Final:
y10 = data.matrix(read.xlsx("MIP2010_12s.xlsx", sheet = "y", colNames = FALSE))
# Valor Bruto da Produção:
x10 = data.matrix(read.xlsx("MIP2010_12s.xlsx", sheet = "x", colNames = FALSE))
x10 = as.vector(x10)
## Ano: 2010
## Atualização
Z10 = Z10 / 71.13 * 100 # Consumo Intermediário
y10 = y10 / 71.13 * 100 # Demanda Final
x10 = x10 / 71.13 * 100 # Valor Bruto da Produção
## Auxiliares
n = length(x15) # Número de setores (o mesmo nos dois anos)
I = diag(n)     # Matriz Identidade
## Ano: 2015
A15 = Z15 %*% diag(1 / x15) # Matriz de Coeficientes Técnicos
B15 = solve(I - A15)        # Matriz Inversa de Leontief
## Ano: 2010
A10 = Z10 %*% diag(1 / x10) # Matriz de Coeficientes Técnicos
B10 = solve(I - A10)        # Matriz Inversa de Leontief
deltax = x15 - x10 # Variação produto
MUD_TEC = 0.5 *((B15 - B10) %*% (y10 + y15)) # Mudança tcnológica
MUD_DF = 0.5 *((B10 + B15) %*% (y15 - y10)) # Mudança na demanda
# Tabela com os resultados
Decomp = cbind(Setores, deltax, MUD_TEC, MUD_DF)
colnames(Decomp) = c("Setores", "Var. x", "Var. Tecnológica", "Var. Demanda Final")
Decomp = rbind(Decomp, c("Total", colSums(Decomp[, 2:4])))
Decomp$`Var. x` = as.numeric(Decomp$`Var. x`)
Decomp$`Var. Tecnológica` = as.numeric(Decomp$`Var. Tecnológica`)
Decomp$`Var. Demanda Final` = as.numeric(Decomp$`Var. Demanda Final`)
Decomp
# Opção com flextable
library(flextable)
flextable(Decomp) %>%
align(align = "center", part = "all" ) %>%
set_caption(caption = "Decomposição Estrutural") %>%
footnote(value = as_paragraph("Fonte: elaboração própria com dados da MIP do IBGE (2015)."),
ref_symbols = "")
# Gráfico
# Leitura dos pacotes
library(ggplot2)
library(scales)
# Seleção apenas dos n setores (exclui a linha com o total)
Decomp_set = Decomp[-13,]
# Variação de x
g1 = ggplot(Decomp_set) +
geom_col(aes(x = factor(Setores, levels = unique(Setores)), y = `Var. x`),
fill = "blue4") +
theme_bw() +
xlab("Setores") +
ylab(" ") +
ggtitle("Decomposição Estrutural") +
labs(subtitle = "2015-2010\nVariação do Produto") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(angle=35, vjust = 0.7)) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01),
limits = c(-50000, 250000),
breaks = seq(from = -50000, to = 250000, by = 50000))
# Variação Tecnológica
g2 = ggplot(Decomp_set) +
geom_col(aes(x = factor(Setores, levels = unique(Setores)), y = `Var. Tecnológica`),
fill = "firebrick") +
theme_bw() +
xlab("Setores") +
ylab(" ") +
ggtitle("Variação Tecnológica") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01))
# Variação na Demanda Final
g3 =  ggplot(Decomp_set) +
geom_col(aes(x = factor(Setores, levels = unique(Setores)), y = `Var. Demanda Final`),
fill = "deepskyblue3") +
theme_bw() +
xlab("Setores") +
ylab(" ") +
ggtitle("Variação na Demanda Final") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
scale_y_continuous(labels = scales::number_format(accuracy = 0.01))
# Grid com os três gráficos
library(gridExtra)
grid.arrange(g1, arrangeGrob(g2, g3, ncol = 2), ncol = 1,
bottom = "Fonte: elaboração própria com dados da MIP do IBGE (2015/2010).")
g1
g2
g3
wb = createWorkbook()
# Definindo as abas
addWorksheet(wb, "MP")
addWorksheet(wb, "ME")
addWorksheet(wb, "MR")
addWorksheet(wb, "IndHR")
addWorksheet(wb, "CV")
addWorksheet(wb, "IPLN")
addWorksheet(wb, "SI")
addWorksheet(wb, "ExtHipo")
addWorksheet(wb, "Decomp")
# Salvando os resultados nas abas
writeDataTable(wb, "MP", x = MultProd)
writeDataTable(wb, "ME", x = MultEmp)
writeDataTable(wb, "MR", x = MultRen)
writeDataTable(wb, "IndHR", x = IndLig)
writeDataTable(wb, "CV", x = CoefVar)
writeDataTable(wb, "IPLN", x = IPLN)
writeData(wb, "SI", x = SI, colNames = FALSE)
writeDataTable(wb, "ExtHipo", x = Extrac)
writeDataTable(wb, "Decomp", x = Decomp)
# Exportando como arquivo XLSX
saveWorkbook(wb, file = "Resultados.xlsx", overwrite = TRUE)
Decomp
{
# Passos iniciais
# Definição do Diretório de Trabalho
setwd("/Users/vinicius/Documents/IPEA/Python/Dados-IP-R/Input")
# Verificar o diretório de trabalho
getwd()
# Remover todos objetos do Environment
rm(list = ls())
} # Passos iniciais
# Remover todos objetos do Environment
rm(list = ls())
# Clear plots
dev.off()
# Clear console
cat("\014")
